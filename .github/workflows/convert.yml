name: Docs to PDF

permissions:
  contents: write
  actions: read

on:
  push:
    branches:
      - main

jobs:
  converttopdf:
    name: Build PDF
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Build PDF from markdown
        uses: baileyjm02/markdown-to-pdf@v1
        with:
          input_dir: docs
          output_dir: pdfs
          images_dir: docs/images
          image_import: ./images
          build_html: false

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v3
        with:
          name: export  # Artifact name is 'export' to match download in the release job
          path: pdfs

  release:
    name: Download Artifact and Create Release
    runs-on: ubuntu-latest
    needs: converttopdf
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: export  # Artifact name should match what was uploaded
          path: ./export

      - name: Generate random tag
        id: random_tag
        run: |
          TAG="v$(date +'%Y%m%d%H%M%S')"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "Generated tag: $TAG"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: "Release ${{ env.TAG }}"
          body: "Automated release with a random tag."
          draft: false
          prerelease: false

      - name: Display structure of downloaded files
        run: ls -R ./export

      - name: Upload PDF to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./export/terms.pdf  
          asset_name: terms.pdf
          asset_content_type: application/pdf
